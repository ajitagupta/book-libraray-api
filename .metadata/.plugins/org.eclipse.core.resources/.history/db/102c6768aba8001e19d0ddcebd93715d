package com.example.demo.controller;

import java.util.ArrayList;
import java.util.List;

import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.servlet.ModelAndView;

import com.example.demo.model.Library;
import com.example.demo.response.Response;

@RestController /* this annotation is responsible to make out class ready to receive api calls
				*
				* Behind the scenes creation of handler mapping beans to handle the apis according to http
				* 
				*/
public class HomeController {
	
	//Url mappings is combination og Http method + url name
	
	List<Response> list = new ArrayList<>();
	
	@GetMapping("/hello") // http get method - GetMapping
	public String hello() {
		return "hello";
	}

	@GetMapping("/h2")
	public String hello2() {
		return "hello 2";
	}
	
	@GetMapping(value = "/h3") //produces = MediaType.APPLICATION_XML_VALUE
	public ResponseEntity<Response> hello3(){
	Response response = new Response("1", "name", "address", 1234567)	;
		
	return new ResponseEntity<Response>(response, HttpStatus.ACCEPTED); //202
	}
	
	@PostMapping("/h3")
	public ResponseEntity<Response> create(@RequestBody Response response) { //@RequestBody is responsible to recieve 'body' data from UI,and convrt that data to java class 
		list.add(response);
		return new ResponseEntity<Response>(response, HttpStatus.CREATED); //201
		
	}
	
	@PutMapping("/h3")
	public ResponseEntity<Response> update(@RequestBody Response response) { //@RequestBody is responsible to recieve 'body' data from UI,and convrt that data to java class 
		int toUpdate = Integer.valueOf(response.getId());
		list.add(toUpdate, response);
		return new ResponseEntity<Response>(response, HttpStatus.OK); //200
		
	}
	
	@DeleteMapping("/h3/{id}")
	public ResponseEntity<String> delete(@PathVariable String id) { //@RequestBody is responsible to recieve 'body' data from UI,and convrt that data to java class 
		System.out.print(id);
		list.remove(id);
		return new ResponseEntity<String>(id, HttpStatus.GONE);	
	}
	
	@GetMapping("/")
	public ModelAndView home() {
		ModelAndView mv = new ModelAndView();
		//mv.addObject("user", "ABC");
		mv.setViewName("home.html");
		return mv;
		
	}
	

}
